#!/bin/bash
# Post-tool-use hook generated by Aircana
# This hook runs after a tool has been executed

# Get tool execution details
TOOL_NAME="$1"
TOOL_PARAMS="$2"
TOOL_RESULT="$3"
EXIT_CODE="$4"

# Log the tool execution
echo "$(date): Tool '$TOOL_NAME' completed with exit code: $EXIT_CODE" >> ~/.aircana/hooks.log

# Initialize context for response
ADDITIONAL_CONTEXT=""

# Handle specific tools
case "$TOOL_NAME" in
  "Edit"|"Write")
    # Auto-update relevant files context if code files were modified
    if echo "$TOOL_PARAMS" | grep -E "\.(rb|js|py|ts)$" && [ "$EXIT_CODE" -eq 0 ]; then
      ADDITIONAL_CONTEXT="Code file modified - consider updating relevant files context."
    fi
    ;;
  "Bash")
    # Handle bash command results
    if [ "$EXIT_CODE" -ne 0 ]; then
      echo "Bash command failed: $TOOL_PARAMS" >> ~/.aircana/hooks.log
      ADDITIONAL_CONTEXT="Previous bash command failed with exit code $EXIT_CODE."
    fi
    ;;
esac

# Output appropriate JSON response
if [ -n "$ADDITIONAL_CONTEXT" ]; then
  # Escape context for JSON
  ESCAPED_CONTEXT=$(echo -n "$ADDITIONAL_CONTEXT" | sed 's/"/\\"/g')
  cat << EOF
{
  "hookSpecificOutput": {
    "hookEventName": "PostToolUse",
    "additionalContext": "$ESCAPED_CONTEXT"
  }
}
EOF
else
  # No additional context needed
  echo "{}"
fi