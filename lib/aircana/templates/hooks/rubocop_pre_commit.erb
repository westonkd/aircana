#!/bin/bash
# RuboCop pre-commit hook generated by Aircana
# This hook runs RuboCop before allowing commits

# Get the tool name and parameters
TOOL_NAME="$1"
TOOL_PARAMS="$2"

# Only act on Bash commands that look like git commits
if [ "$TOOL_NAME" != "Bash" ]; then
  exit 0
fi

# Check if this is a git commit command
if ! echo "$TOOL_PARAMS" | grep -q "git commit"; then
  exit 0
fi

# Check if we're in a Ruby project
if [ ! -f "Gemfile" ] && [ ! -f ".rubocop.yml" ]; then
  exit 0
fi

# Get list of staged Ruby files
RUBY_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(rb)$' | tr '\n' ' ')

if [ -z "$RUBY_FILES" ]; then
  # No Ruby files to check
  exit 0
fi

echo "Running RuboCop on staged Ruby files..."

# Run RuboCop on staged files
if command -v bundle >/dev/null 2>&1 && [ -f "Gemfile" ]; then
  bundle exec rubocop $RUBY_FILES
else
  rubocop $RUBY_FILES
fi

RUBOCOP_EXIT_CODE=$?

if [ $RUBOCOP_EXIT_CODE -ne 0 ]; then
  cat << EOF
{
  "type": "advanced",
  "decision": "deny",
  "message": "RuboCop found style violations. Please fix them before committing.\n\nYou can run: bundle exec rubocop $RUBY_FILES --auto-correct\n\nOr fix them manually and try again."
}
EOF
  exit 1
fi

# RuboCop passed, allow the commit
exit 0